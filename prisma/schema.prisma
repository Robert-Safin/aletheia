// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id    Int     @id @default(autoincrement())
  email String  @unique
  password String
  name  String @unique
  isVenueOwner Boolean @default(false)
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt


  venue Venue[]
}

model Venue {
  id   Int     @id @default(autoincrement())
  name String  @unique
  categories String
  address String
  averageRating Float
  photo String @default("https://res.cloudinary.com/dxgkclowd/image/upload/v1687667294/Aletheia/placeholder-flat-multicolor-icon-vector_jqvcso.jpg")
  longitude Float @default(0)
  latitude Float @default(0)
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt

  owner User @relation(fields: [ownerId], references: [id])
  @@index([ownerId])
  ownerId Int

  events Event[]
  offers Offer[]
  reviews Review[]
}

model Review {
  id Int @id @default(autoincrement())
  rating Int
  comment String
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt

  venue Venue @relation(fields: [venueId], references: [id])
  @@index([venueId])
  venueId Int
}

model Event {
  id Int @id @default(autoincrement())
  start DateTime
  end DateTime
  description String
  QRQuntity Int
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt


  venue Venue @relation(fields: [venueId], references: [id])
  @@index([venueId])
  venueId Int

  QREvents QREvent[]
}

model Offer {
  id Int @id @default(autoincrement())
  start DateTime
  end DateTime
  description String
  QRQuntity Int
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt


  venue Venue @relation(fields: [venueId], references: [id])
  @@index([venueId])
  venueId Int

  QROffers QROffer[]
}


model QREvent {
  id Int @id @default(autoincrement())
  image String
  isRedeemed Boolean @default(false)
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt

  event Event @relation(fields: [eventId], references: [id])
  @@index([eventId])
  eventId Int
}


model QROffer {
  id Int @id @default(autoincrement())
  image String
  isRedeemed Boolean @default(false)
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt

  offer Offer @relation(fields: [offerId], references: [id])
  @@index([offerId])
  offerId Int
}
